% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/keyphrase.R
\name{keyphrase_vectorizer}
\alias{keyphrase_vectorizer}
\title{Build a Keyphrase Vectorizer}
\usage{
keyphrase_vectorizer(
  obj = NULL,
  language = "english",
  stopword_package_sources = NULL,
  exclude_stop_words = T,
  extra_stop_words = NULL,
  is_lower_case = TRUE,
  spacy_exclude = list("parser", "attribute_ruler", "lemmatizer", "ner"),
  max_df = NULL,
  min_df = NULL,
  workers = 1,
  pos_pattern = "<J.*>*<N.*>+",
  spacy_pipeline = "en_core_web_sm",
  custom_pos_tagger = NULL,
  binary = FALSE,
  decay = NULL,
  delete_min_df = NULL
)
}
\arguments{
\item{obj}{keyphrase modeule object}

\item{language}{stop words language; default is `English`}

\item{stopword_package_sources}{list of stopwords sources from `stopwords` packages}

\item{exclude_stop_words}{if `TRUE` excludes stopwords}

\item{extra_stop_words}{if `TRUE` other stopwords to exclude}

\item{is_lower_case}{Whether the returned keyphrases should be converted to lowercase.}

\item{max_df}{During fitting ignore keyphrases that have a document frequency strictly higher than the given threshold. Default `NULL`}

\item{min_df}{During fitting ignore keyphrases that have a document frequency strictly lower than the given threshold. This value is also called cut-off in the literature.  Default `NULL`}

\item{workers}{How many workers to use for spaCy part-of-speech tagging. If set to -1, use all available worker threads of the machine. SpaCy uses the specified number of cores to tag documents with part-of-speech. Depending on the platform, starting many processes with multiprocessing can add a lot of overhead. In particular, the default start method spawn used in macOS/OS X (as of Python 3.8) and in Windows can be slow. Therefore, carefully consider whether this option is really necessary.}

\item{pos_pattern}{Position Pattern defaults to `pos_pattern = "<J.*>*<N.*>+"`}

\item{spacy_pipeline}{A list of spaCy \itemize{
\item \href{https://spacy.io/usage/processing-pipelines#built-in}{Spacy Pipeline options}
} components that should be excluded during the POS-tagging. Removing not needed pipeline components can sometimes make a big difference and improve loading and inference speed.}

\item{custom_pos_tagger}{A callable function which expects a list of strings in a ‘raw_documents’ parameter and returns a list of (word token, POS-tag) tuples. If this parameter is not None, the custom tagger function is used to tag words with parts-of-speech, while the spaCy pipeline is ignored.}

\item{binary}{If True, all non zero counts are set to 1. This is useful for discrete probabilistic models that model binary events rather than integer counts.}

\item{delete_min_df}{}
}
\description{
Build a Keyphrase Vectorizer
}
\examples{
vectorizer_model <- keyphrase_vectorizer(pos_pattern = "<J.*>*<N.*>+")
docs <- c('This is the first document.', 'This document is the second document.', 'And this is the third one.', 'Is this the first document?')
vectorizer_model$fit_transform(raw_documents = docs)
vectorizer_model$get_feature_names_out()
vectorizer_model$keyphrases
}
